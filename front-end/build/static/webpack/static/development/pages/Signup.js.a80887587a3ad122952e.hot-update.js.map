{"version":3,"file":"static/webpack/static\\development\\pages\\Signup.js.a80887587a3ad122952e.hot-update.js","sources":["webpack:///./pages/Signup.js"],"sourcesContent":["import Layout from \"./components/myLayoutBefore\";\r\nimport React from 'react';\r\nimport {Alert} from './components/warnAlert';\r\nimport Alert1 from './components/successAlert';\r\nimport {Post} from \"./components/http\";\r\nimport \"./css/app.css\";\r\nimport { Privacy } from \"./components/Privacy\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nconst inputStyle ={\r\n    margin: 20,\r\n    outlineStyle: 'none' ,\r\n    border: '1px solid #ccc',\r\n    borderRadius: '3px',\r\n    padding: '12px 12px',\r\n    width: '70%',\r\n    fontFamily: \"Microsoft soft\",\r\n    \r\n}\r\nconst boxStyle={\r\n    position:'relative',\r\n    left:'20%',\r\n    textAlign:'center',\r\n    width:\"60%\",\r\n    marginBottom:'20px',\r\n    padding:'30px',\r\n    border:'2px solid  #ffd633',\r\n    borderRadius:'2px',\r\n \r\n}\r\n\r\nconst bannerStyle ={\r\n    position:'relative',\r\n    left:'20%',\r\n    textAlign:'center',\r\n    marginTop:\"20px\",\r\n    width:\"60%\",\r\n    padding: '10px 10px',\r\n    border:'2px solid  #ffd633',\r\n    backgroundColor:\"#ffd633\",\r\n    borderRadius:'2px',\r\n   \r\n}\r\n\r\nvar salt = bcrypt.genSaltSync(10);\r\n\r\nfunction ErrAlert1(props){\r\n        console.log(props)\r\n        return <h1>aaa</h1>\r\n        // switch(props.errStatus){\r\n        //     case -1:\r\n        //         return(\r\n        //             <div>\r\n        //                 <Alert title=\"Warning!\" content=\"Your email has already applicated, please sign in!\" />\r\n        //             </div>\r\n        //         ) \r\n        //     case -2:\r\n        //         return(\r\n        //             <div>\r\n        //                 <Alert title=\"Warning!\" content=\"Username has already been token, please change!\" />\r\n        //             </div>\r\n        //         )\r\n        //     case -3:\r\n        //         return(\r\n        //             <div>\r\n        //                 <Alert title=\"Warning!\" content=\"Please enter the same password!\" />\r\n        //             </div>\r\n        //         )\r\n        // }\r\n}\r\n\r\nclass accountInfo extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {errMsg:'',\r\n                        email:'',\r\n                        psw:'',\r\n                        cfm:'',\r\n                        phone:'',\r\n                        address:'',\r\n                        motivation:'',\r\n                        experience:'',\r\n                        errAlert:'none',\r\n                        successAlert: \"none\",\r\n                        name: '',\r\n                        showP:'none',\r\n                        errStatus:0,\r\n                        };\r\n            this.pswInput = React.createRef();\r\n            this.cfmInput = React.createRef();\r\n            this.handleChange = this.handleChange.bind(this);\r\n            this.handleSubmit = this.handleSubmit.bind(this);\r\n            this.handleClose = this.handleClose.bind(this);\r\n            this.handleClick = this.handleClick.bind(this);\r\n            this.handleshow = this.handleshow.bind(this)\r\n    }\r\n    handleClick=(e)=>{\r\n        e.preventDefault()\r\n        this.setState({showP:'block'})\r\n    }\r\n    handleshow=()=>{\r\n        this.setState({showP:'none'})\r\n    }\r\n    handleClose(){\r\n        this.setState({\r\n            errAlert: 'none'\r\n        })\r\n    }\r\n        handleChange(event){\r\n            let err = '';\r\n            let name = event.target.name;\r\n            let val = event.target.value;\r\n            let psw = this.pswInput.current.value;\r\n            let cfm = this.cfmInput.current.value;\r\n          \r\n            this.setState({\r\n                [name]:val,\r\n            })\r\n            if(psw !==''&&cfm !==''){\r\n                \r\n                if(psw == cfm){\r\n                    err = ''\r\n                }else{\r\n                    err = 'Different password'\r\n                   \r\n                }\r\n            }\r\n            this.setState({\r\n                psw: this.pswInput.current.value,\r\n                errMsg:err,\r\n            })\r\n           \r\n        }\r\n        handleSubmit(e) {\r\n            e.preventDefault();\r\n            if(this.pswInput.current.value !== this.cfmInput.current.value){\r\n                this.setState({\r\n                    errAlert:'block',\r\n                    errStatus: '-3'\r\n                })\r\n            }\r\n            else{\r\n                var psw = bcrypt.hashSync(this.state.password, salt);\r\n                const data = {\r\n                    email: this.state.email,\r\n                    psw: psw,\r\n                    userName: this.state.userName,\r\n                    name: this.state.name,\r\n                    phone: this.state.phone,\r\n                    address: this.state.address,\r\n                    motivation: this.state.motivation,\r\n                    experience: this.state.experience\r\n                }\r\n                Post('signup',data).then(res=>{\r\n                    console.log(res)\r\n                    if(res == 'true'){\r\n                        this.setState({\r\n                            successAlert: \"block\"\r\n                        })\r\n                     }else if(res=='-1'){\r\n                        this.setState({\r\n                            errAlert: \"block\",\r\n                            errStatus: res\r\n                        })\r\n                     }else if(res=='-2'){\r\n                        this.setState({\r\n                            errAlert: \"block\",\r\n                            errStatus: res\r\n                        })\r\n                     }\r\n                })\r\n                \r\n               \r\n            }\r\n        }\r\n        render(){\r\n            \r\n            return(\r\n                <div className =\"container1\">\r\n                   <Layout/>\r\n                   <div style={{display: this.state.errAlert}}>\r\n                        <ErrAlert1 errStatus={this.state.errStatus} />\r\n                    </div>\r\n                    <div style={{display: this.state.successAlert}}>\r\n                        <Alert1 title = \"Success\" content = \"Your application has been successfully submitted! Please wait for approving.\"\r\n                        url=\"/signin\" button=\"Ok\" />\r\n                    </div>\r\n\r\n                    <Privacy show={this.state.showP} finish={this.handleshow}/>\r\n                    \r\n                    <div style={bannerStyle}>\r\n                        <span>account info</span>\r\n                    </div> \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <div style={boxStyle}>\r\n                        <input style = {inputStyle} type=\"email\" name= \"email\" \r\n                        placeholder=\"Enter your email\" value={this.state.value} \r\n                        onChange={this.handleChange} required=\"required\"/><br/>\r\n\r\n                        <input style = {inputStyle} type=\"password\" name = \"password\" \r\n                        placeholder=\"Enter your password\"  ref={this.pswInput} value={this.state.value}\r\n                        onChange={this.handleChange} required=\"required\"/><br/>\r\n\r\n                        <input style = {inputStyle} type=\"password\" name = \"confirm\" \r\n                        placeholder=\"Enter your password again\"  ref={this.cfmInput} \r\n                        onChange={this.handleChange} required=\"required\"/><span style={{color:'red'}}>{this.state.errMsg}</span><br/>\r\n                        <input style = {inputStyle} type=\"text\" name = \"name\" \r\n                        placeholder=\"Enter your real name\" value={this.state.value}\r\n                        onChange={this.handleChange} required=\"required\"/><br/>\r\n                    </div> \r\n                   \r\n                    <div style={bannerStyle}>\r\n                        <span>Personal info</span>\r\n                    </div> \r\n                    <div style={boxStyle}>\r\n                        <input style = {inputStyle} type=\"text\" name = \"userName\" \r\n                        placeholder=\"Enter your userName\"  value={this.state.value}\r\n                        onChange={this.handleChange} required=\"required\"/><br/>\r\n                    \r\n                        <input style = {inputStyle} type=\"number\" name = \"phone\" required=\"required\"\r\n                        placeholder=\"Enter your phone here\" value={this.state.value} onChange={this.handleChange}/><br/>\r\n\r\n                        <input style = {inputStyle} type=\"text\" name = \"address\" \r\n                        placeholder=\"Enter your address\" value={this.state.value}\r\n                        onChange={this.handleChange} required=\"required\"/><br/>\r\n                    </div> \r\n                    <div style={boxStyle}>\r\n                        <div className=\"form-group\">\r\n                            <textarea style={{marginBottom:'40px',width:'70%',left:'15%',position:'relative'}} className=\"form-control\" name=\"motivation\" onChange={this.handleChange} value={this.state.value} \r\n                            id=\"Textarea1\" rows=\"5\" placeholder='Enter your motivation' required=\"required\"/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea style={{width:'70%',left:'15%',position:'relative'}} className=\"form-control\" name=\"experience\" onChange={this.handleChange} value={this.state.value} \r\n                            id=\"Textarea2\" rows=\"5\" placeholder='Enter your experience' required=\"required\"/>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"checkbox\" className=\"check-input\" name=\"privacy\" checked={this.state.value} onChange={this.handleChange} required=\"required\"/>\r\n                            <button onClick={this.handleClick} className=\"btn-none\">\r\n                           \r\n                            I have read the privacy policy statement in this link, and agree with it by selecting this check box.\r\n                            \r\n                            </button>\r\n                        </div>\r\n                        <div style ={{textAlign:'center',marginBottom:'20px'}}>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-lg\" style={{borderRadius:\"4px\",marginTop:\"20px\"}}>Send application</button>\r\n                        </div>\r\n                    </div> \r\n                </form>\r\n\r\n                    <style jsx>{`\r\n                    input:focus{\r\n                        border-color: #66afe9;\r\n                        outline: 0;\r\n                        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);\r\n                        box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)\r\n                    }\r\n                    .check-input{\r\n                        position: relative;\r\n                        width:40px;\r\n                    }\r\n                    .btn-none{\r\n                        border:none;\r\n                        background-color:#fff;\r\n                    }\r\n\r\n                    .btn-none: hover{\r\n                        cursor:pointer\r\n                    }\r\n                `}</style>\r\n                </div> \r\n                \r\n            );\r\n          }\r\n    }\r\n\r\nexport default accountInfo;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAyBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA5BA;AA6BA;AAAA;AAAA;AACA;AACA;AA7BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAulEA;AAAA;AAAA;AA8FA;;;;AAzMA;AACA;AA2MA;;;;A","sourceRoot":""}